import type {MultiLanguageLabels} from "@/types/DataStructures.ts";

export interface FinancialData {
  balanceSheet: FinancialDataNode;
  incomeStatement: FinancialDataNode;
  usedCodes: string[]; // List of codes used in the data
  unusedCodes: string[]; // List of codes not used in the data (should be empty list for valid data)
  entities: Map<string, FinancialDataEntity>; // Map of entity codes to entity names
  metadata: FinancialDataMetadata;
}

export interface FinancialDataEntity {
  code: string; // Entity code (e.g., "gdn/fs/010002:2016" for municipality or "std/fs/gdn_zh:2016" for Muncipalities of Canton Zurich)
  name: MultiLanguageLabels; // Entity name - city name or entity semantic description - generated by EntitySemanticMapper
  metadata: FinancialDataMetadata;
}

export interface FinancialDataNode {
  code: string; // Account code (e.g., "4000")
  labels: MultiLanguageLabels; // Labels in DE, FR, IT, EN - (eg., "Einkommenssteuern nat√ºrliche Personen")
  values: Map<string, FinacialDataValue>; // Map of dataset codes to values
  children: FinancialDataNode[];
}

export interface FinancialDataMetadata {
  source: string;
  loadedAt: string;
  recordCount: number;
}

export interface FinacialDataValue {
  value: number | null;
  unit: string;
}


